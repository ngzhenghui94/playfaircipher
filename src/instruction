Playfair cipher
// Adjust the plainText by replacing I with J and removes all spaces.
// Text with consecutive same char, will have x inserted inbetween
// If plainText len is odd, append 'Z' to it. (https://learncryptography.com/classical-encryption/playfair-cipher/)
// Therefore: If MSG = "zzzz" Adjusted MSG = "zxzxzxz" (ODD length) = "zxzxzxzz"

To compile:
1.) navigate to the src folder within the project
2.) compile: javac Playfair.java

To run:
D:\Google Drive\eclipse-workspace\Playfair\src>javac *.java
D:\Google Drive\eclipse-workspace\Playfair\src>java Playfair -e keyword.txt  plaintext.txt ciphertext.txt
Plain text with odd length is padded with a Z at the end.
J is replaced with I.
Consecutive same chars have X inserted inbetween them.
Encrypt Mode.
Generated Keyword: CJXGCL
CJXGL
ABDEF
HKMNO
PQRST
UVWYZ
PlainText: CCCCCCCCC
Adjusted PlainText: CXCXCXCXCXCXCXCXCZ
Adjusted keyword: CJXGL
Encrypted Text: JGJGJGJGJGJGJGJGUL

D:\Google Drive\eclipse-workspace\Playfair\src>java Playfair -d keyword.txt ciphertext.txt plaintext.txt
Plain text with odd length is padded with a Z at the end.
J is replaced with I.
Consecutive same chars have X inserted inbetween them.
Decrypt mode.
Read'd Keyword: CJXGCL
CJXGL
ABDEF
HKMNO
PQRST
UVWYZ
Encrypted Text: JGJGJGJGJGJGJGJGUL
Decrypted Text: CXCXCXCXCXCXCXCXCZ

D:\Google Drive\eclipse-workspace\Playfair\src>
